{"version":3,"sources":["assets/search_icon.svg","assets/background.jpg","components/BasePage.js","reducers/songs.js","actions/songs.js","components/MainPage.js","services/ApiClientService.js","reducers/chords.js","actions/chords.js","assets/arrow_down.svg","assets/arrow_up.svg","assets/minus.svg","assets/plus.svg","components/SongPage.js","components/SearchResults.js","components/hooks/useAuth.js","components/SignUp.js","components/LogIn.js","components/AddSong.js","components/UpdateSong.js","App.js","reportWebVitals.js","reducers/index.js","index.js","store.js"],"names":["BasePage","props","isLogin","user","setIsLogin","search","window","location","query","URLSearchParams","get","useState","searchQuery","setSearchQuery","className","src","guitar_back","to","color","username","onClick","a","localStorage","clear","search_icon","action","encodeURIComponent","method","autoComplete","value","onInput","e","target","type","placeholder","SET_SONG_LIST","SET_SONG","SET_ERROR","SET_SONG_LIST_MORE","initialState","songList","songs","isError","page","count","userSchema","schema","Entity","songSchema","setSongs","data","normalize","result","entities","payload","song","users","setSongsMore","setIsError","fetchSongs","query_line","dispatch","fetch","response","json","console","log","results","fetchSongsMore","getState","state","fetchSong","songId","MainPage","useDispatch","useSelector","ordering_query","React","useEffect","map","SongCard","id","length","singer","song_name","views","apiBase","ApiClientService","url","options","access","getItem","headers","status","refresh","body","JSON","stringify","refreshResponse","refreshData","setItem","SET_CHORD_LIST","chords","chordList","chordSchema","setChords","chord","SongPage","params","useParams","fontSize","setFontSize","scrollSpeed","setScrollSpeed","formData","FormData","append","toString","ModifyScroll","delta","newScrollSpeed","scrollOptions","smooth","containerId","isDynamic","duration","scrollDistanceInPx","scroll","scrollToTop","scrollToBottom","scrollTo","words","song_text","split","chord_images","Object","entries","includes","name","push","image","arrow_up","arrow_down","minus","plus","chord_image","style","SearchResults","fetch_songs_query_args","marginRight","marginTop","decodeURIComponent","useAuth","setError","navigate","useNavigate","onAuth","login","password","ok","detail","SignUp","setLogin","setPassword","repeat_password","setRepeatPassword","error","handleSubmit","event","preventDefault","onSubmit","onChange","LogIn","AddSong","set_singer","set_song_name","set_song_text","handleClick","songKey","UpdateSong","song_id","request_song","App","setUser","fetchUser","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","ReactDOM","render","StrictMode","store","createStore","composeWithDevTools","applyMiddleware","thunk","document","getElementById"],"mappings":"0SAAe,MAA0B,wCCA1B,MAA0B,uC,eCMlC,SAASA,EAASC,GACrB,IAAOC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,WAEfC,EAAUC,OAAOC,SAAjBF,OACDG,EAAQ,IAAIC,gBAAgBJ,GAAQK,IAAI,KAC9C,EAAsCC,mBAASH,GAAS,IAAxD,mBAAOI,EAAP,KAAoBC,EAApB,KAEA,OAAIX,IAAYC,EACJ,6BAIR,qCACI,qBAAKW,UAAU,eACf,qBAAKA,UAAU,mBAAf,SACI,qBAAKC,IAAKC,MAEd,sBAAKF,UAAU,UAAf,UACI,cAAC,IAAD,CAAMG,GAAG,IACHH,UAAU,oEADhB,sBAEA,sBAAKA,UAAU,mBAAf,UACKZ,EACG,qCACI,sBAAKY,UAAU,eAAf,0BACiB,sBAAMI,MAAM,UAAZ,SAAuBf,EAAKgB,cAG7C,qBAAKL,UAAU,iBAAf,SACI,cAAC,IAAD,CACIG,GAAG,YACHH,UAAU,+CAFd,wBAQJ,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CAAMG,GAAG,WAAWH,UAAU,+CACxBM,QAAO,sBAAE,sBAAAC,EAAA,sDACLjB,GAAW,GACXE,OAAOgB,aAAaC,QAFf,2CADf,0BAUR,qCACI,qBAAKT,UAAU,iBAAf,SACI,cAAC,IAAD,CACIG,GAAG,UACHH,UAAU,+CAFd,sBAOJ,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CAAMG,GAAG,WAAWH,UAAU,+CAA9B,0BAMZ,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAKC,IAAKS,MAGd,sBAAMC,OAAM,0BAAqBC,mBAAmBd,IAC9Ce,OAAO,MAAMC,aAAa,OADhC,SAEI,uBACIC,MAAOjB,EACPkB,QAAS,SAAAC,GAAC,OAAIlB,EAAekB,EAAEC,OAAOH,QACtCI,KAAK,OACLC,YAAY,YACZpB,UAAU,2D,0CCjF7BqB,EAAgB,gBAChBC,EAAW,WACXC,EAAY,YACZC,EAAqB,qBAE5BC,EAAe,CACjBC,SAAU,GACVC,MAAO,GACPC,SAAS,EACTC,KAAM,EACNC,MAAO,GCPX,IAAMC,EAAa,IAAIC,IAAOC,OAAO,QAC/BC,EAAa,IAAIF,IAAOC,OAAO,OAAQ,CACzC5C,KAAM0C,IAGV,SAASI,EAASC,EAAMN,GACpB,MAA2BO,YAAUD,EAAM,CAACF,IAArCI,EAAP,EAAOA,OAAQC,EAAf,EAAeA,SAEf,MAAO,CACHpB,KAAME,EACNmB,QAAS,CACLV,QACAJ,SAAUY,EACVX,MAAOY,EAASE,KAChBC,MAAOH,EAASlD,OAK5B,SAASsD,EAAaP,GAClB,MAA2BC,YAAUD,EAAM,CAACF,IAArCI,EAAP,EAAOA,OAAQC,EAAf,EAAeA,SAEf,MAAO,CACHpB,KAAMK,EACNgB,QAAS,CACLd,SAAUY,EACVX,MAAOY,EAASE,KAChBC,MAAOH,EAASlD,OAY5B,SAASuD,IACL,MAAO,CACHzB,KAAMI,GAIP,SAASsB,IAA2B,IAAhBC,EAAe,uDAAJ,GAIlC,OAHIA,IACAA,EAAa,IAAMA,GAEvB,uCAAO,WAAOC,GAAP,iBAAAxC,EAAA,+EAEwByC,MAAM,kCAAD,OAAmCF,IAFhE,cAEOG,EAFP,gBAGoBA,EAASC,OAH7B,OAGOd,EAHP,OAICe,QAAQC,IAAI,kBAAmBhB,GAC/BW,EAASZ,EAASC,EAAKiB,QAASjB,EAAKN,QALtC,kDAOCiB,EAASH,KAPV,0DAAP,sDAYG,SAASU,IAA+B,IAAhBR,EAAe,uDAAJ,GACtC,8CAAO,WAAOC,EAAUQ,GAAjB,qBAAAhD,EAAA,sEAEOiD,EAAQD,IACR1B,EAAO2B,EAAM7B,MAAME,KAH1B,SAIwBmB,MAAM,wCAAD,OACgBnB,EAAO,EADvB,YAC4BiB,IALzD,cAIOG,EAJP,gBAOoBA,EAASC,OAP7B,OAOOd,EAPP,OAQCW,EAASJ,EAAaP,EAAKiB,UAR5B,kDAUCN,EAASH,KAVV,0DAAP,wDAeG,SAASa,EAAUC,GACtB,8CAAO,WAAOX,GAAP,iBAAAxC,EAAA,+EAEwByC,MAAM,mCAAD,OAAoCU,IAFjE,cAEOT,EAFP,gBAGoBA,EAASC,OAH7B,OAGOT,EAHP,OAKCM,EAlDD,CACH5B,KAAMG,EACNkB,QAgDqBC,IALlB,kDAOCM,EAASH,KAPV,0DAAP,sD,MC3EG,SAASe,IACZ,IAAMZ,EAAWa,cACXlC,EAAWmC,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMD,YAC9CI,EAAQ+B,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMG,SAC3CF,EAAUiC,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMC,WAE7CkC,EAAiB,kBAMvB,OAJAC,IAAMC,WAAU,WACZjB,EAASF,EAAWiB,MACrB,IAEClC,EAEI,8HAKJ,qCACI,qBAAK5B,UAAU,qEAAf,qBAGA,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,6DAAf,gCAGA,qBAAKA,UAAU,iEAAf,sBAIJ,sBAAKA,UAAU,gBAAf,UACK0B,EAASuC,KAAI,SAACP,GAAD,OACV,cAACQ,EAAD,CAAUC,GAAIT,GAAaA,MAE9BhC,EAAS0C,OAAStC,GACf,qBAAK9B,UAAU,gBAAf,SACI,qBACIA,UAAU,iDACVM,QAAS,kBAAMyC,EAASO,EAAeQ,KAF3C,+BAaxB,SAASI,EAAS/E,GACd,IAAQgF,EAAOhF,EAAPgF,GACF1B,EAAOoB,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMA,MAAMwC,MAEtD,OACI,cAAC,IAAD,CAAMhE,GAAE,gBAAWsC,EAAK0B,IAAxB,SACI,qBAAKnE,UAAU,gBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,6DAAf,UACKyC,EAAK4B,OADV,MACqB5B,EAAK6B,aAE1B,qBAAKtE,UAAU,iEAAf,SACKyC,EAAK8B,e,YCpExBC,EAAU,6BAET,SAAeC,EAAtB,kC,4CAAO,WAAgCC,GAAhC,yCAAAnE,EAAA,6DAAqCoE,EAArC,+BAA+C,GAC5CC,EAASpF,OAAOgB,aAAaqE,QAAQ,UACrCC,EAAUH,EAAQG,SAAW,GAC/BF,IACAE,EAAO,cAAP,iBAAqCF,IAJtC,SAOkB5B,MAAM,GAAD,OAAIwB,GAAJ,OAAcE,GAAd,YAAC,eAAyBC,GAA1B,IAAmCG,aAP1D,UASqB,OAFpB7B,EAPD,QASU8B,OATV,wBAUOC,EAAUxF,OAAOgB,aAAaqE,QAAQ,WAV7C,UAW+B7B,MAAM,GAAD,OAAIwB,EAAJ,kBAA6B,CAC5D3D,OAAQ,OACRiE,QAAS,CACL,eAAgB,oBAEpBG,KAAMC,KAAKC,UAAU,CACjBH,cAjBT,eAWOI,EAXP,iBAoB2BA,EAAgBlC,OApB3C,eAoBOmC,EApBP,OAsBC7F,OAAOgB,aAAa8E,QAAQ,SAAUD,EAAYT,QAElDE,EAAO,cAAP,iBAAqCO,EAAYT,QAxBlD,UA0BkB5B,MAAM,GAAD,OAAIwB,GAAJ,OAAcE,GAAd,YAAC,eAAyBC,GAA1B,IAAmCG,aA1B1D,QA0BC7B,EA1BD,gCA6BgBA,EAASC,OA7BzB,eA6BGd,EA7BH,yBA+BIA,GA/BJ,4C,wBCFA,IAAMmD,EAAiB,iBAExB9D,EAAe,CACjB+D,OAAQ,GACRC,UAAW,ICDf,IAAMC,EAAc,IAAI1D,IAAOC,OAAO,SAEtC,SAAS0D,EAAUvD,GACf,MAA2BC,YAAUD,EAAM,CAACsD,IAArCpD,EAAP,EAAOA,OAAQC,EAAf,EAAeA,SAEf,OADAY,QAAQC,IAAI,WAAYd,EAAQ,eAAgBC,GACzC,CACHpB,KAAMoE,EACN/C,QAAS,CACLiD,UAAWnD,EACXkD,OAAQjD,EAASqD,Q,UCZd,MAA0B,uCCA1B,MAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,iCCiBlC,SAASC,EAAS1G,GACrB,IAAOC,EAAiBD,EAAjBC,QAASC,EAAQF,EAARE,KAEV0D,EAAWa,cACXkC,EAASC,cAEf,EAAgClG,mBAAS,IAAzC,mBAAOmG,EAAP,KAAiBC,EAAjB,KACA,EAAsCpG,mBAAS,GAA/C,mBAAOqG,EAAP,KAAoBC,EAApB,KAEOzC,EAAUoC,EAAVpC,OACDjB,EAAOoB,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMA,MAAM+B,MAChD8B,EAAS3B,aAAY,SAACL,GAAD,OAAWA,EAAMgC,UAoB5C,GAlBAzB,IAAMC,WAAU,WACZjB,EAASU,EAAUC,IACnBX,ELdJ,uCAAO,WAAOA,GAAP,iBAAAxC,EAAA,sEACoByC,MAAM,oCAD1B,cACGC,EADH,gBAEgBA,EAASC,OAFzB,OAEGd,EAFH,OAGHe,QAAQC,IAAI,mBAAoBhB,GAChCW,EAAS4C,EAAUvD,IAJhB,2CAAP,yDKeG,IAEH2B,IAAMC,UAAN,sBAAgB,4BAAAzD,EAAA,0DACRkC,EADQ,uBAEF2D,EAAW,IAAIC,SACrBlD,QAAQC,IAAI,SAAUX,GACtB2D,EAASE,OAAO,SAAU7D,EAAK8B,MAAQ,GAAGgC,YAJlC,SAMW9B,EAAiB,SAAD,OAAUf,EAAV,KAAqB,CACpD7C,OAAQ,QACRoE,KAAMmB,IARF,yDAWb,CAAC3D,KAECA,IAAS+C,GAA4B,IAAlBA,EAAOpB,OAC3B,OAAQ,yCAGZ,SAASoC,EAAaC,GAClB,IAAMC,EAAiBR,EAAcO,EAC/BE,EAAgB,CAClBC,OAAQ,SACRC,YAAa,WACbC,WAAW,EACXC,SAAU,SAAUC,GAChB,OAAO,IAAMA,EAAqBN,IAItCA,EAAiB,EACjBO,gBAAOC,YAAYP,GACZD,EAAiB,EACxBO,gBAAOE,eAAeR,GAEtBM,gBAAOG,SAAS,GAEpBjB,EAAeO,GAMnB,IAHA,IAAMW,EAAQ5E,EAAK6E,UAAUC,MAAM,OAC/BC,EAAe,GAEnB,MAA6BC,OAAOC,QAAQlC,EAAOA,QAAnD,eAA4D,CAAvD,0BAAcI,GAAd,WACGyB,EAAMM,SAAS/B,EAAMgC,OACrBJ,EAAaK,KAAKjC,EAAMkC,OAIhC,OACI,qCACI,sBAAK9H,UAAU,cAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,qBAAf,+BACuBkG,KAEvB,sBAAKlG,UAAU,mBAAf,UACI,qBAAKC,IAAK8H,EAAUzH,QAAS,kBAAMkG,GAAc,MACjD,qBAAKxG,UAAU,UACf,qBAAKC,IAAK+H,EAAY1H,QAAS,kBAAMkG,EAAa,YAI1D,sBAAKxG,UAAU,mBAAf,UACI,sBAAKA,UAAU,qBAAf,wBACgBgG,KAEhB,sBAAKhG,UAAU,iBAAf,UACI,qBAAKC,IAAKgI,EAAO3H,QAAS,kBAAM2F,EAAYD,EAAW,MACvD,qBAAKhG,UAAU,UACf,qBAAKC,IAAKiI,EAAM5H,QAAS,kBAAM2F,EAAYD,EAAW,eAIlE,sBAAKhG,UAAU,WAAWmE,GAAG,WAA7B,UACI,sBAAKnE,UAAU,kBAAf,UACI,sBAAKA,UAAU,oBAAf,UACKyC,EAAK4B,OADV,MACqB5B,EAAK6B,aAGzBlF,GAAYC,EAAK8E,KAAO1B,EAAKpD,KAAK8E,IAC/B,mCACI,qBAAKnE,UAAU,iBAAf,SACI,cAAC,IAAD,CAAMG,GAAE,uBAAkBsC,EAAK0B,IACzBnE,UAAU,+CADhB,8BASdwH,GACE,qBAAKxH,UAAU,cAAf,SACKwH,EAAavD,KAAI,SAACkE,GAAD,OACd,qBAAKlI,IAAKkI,EAAanI,UAAU,mBAK7C,qBAAKoI,MAAO,CAACpC,SAAS,GAAD,OAAKA,EAAL,OAAoBhG,UAAU,cAAnD,SACKyC,EAAK6E,kBChInB,SAASe,IACZ,IAAMvC,EAASC,cACThD,EAAWa,cAEV9D,EAAegG,EAAfhG,YACD4B,EAAWmC,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMD,YAC9CI,EAAQ+B,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMG,SAC3CF,EAAUiC,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMC,WAE7C0G,EAAsB,iBAAaxI,EAAb,oBAM5B,OAJAiE,IAAMC,WAAU,WACZjB,EAASF,EAAWyF,MACrB,IAEC1G,EAEI,8HAKJ,qCACI,sBAAK5B,UAAU,aAAf,UACI,qBAAKoI,MAAO,CAACG,YAAa,QAASvI,UAAU,0DAA7C,6BAGA,qBAAKoI,MAAO,CAACI,UAAW,QAAxB,SACI,qBAAKxI,UAAU,gDAAf,SACKyI,mBAAmB3I,UAIhC,sBAAKE,UAAU,mBAAf,UACI,qBAAKA,UAAU,6DAAf,gCAGA,qBAAKA,UAAU,iEAAf,sBAIJ,sBAAKA,UAAU,gBAAf,UACK0B,EAASuC,KAAI,SAACP,GAAD,OACV,cAAC,EAAD,CAAUS,GAAIT,GAAaA,MAE9BhC,EAAS0C,OAAStC,GACf,qBAAK9B,UAAU,gBAAf,SACI,qBACIA,UAAU,iDACVM,QAAS,kBAAMyC,EAASO,EAAegF,KAF3C,+BAaxB,SAASpE,EAAS/E,GACd,IAAQgF,EAAOhF,EAAPgF,GACF1B,EAAOoB,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMA,MAAMwC,MAEtD,OACI,cAAC,IAAD,CAAMhE,GAAE,gBAAWsC,EAAK0B,IAAxB,SACI,qBAAKnE,UAAU,gBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,6DAAf,UACKyC,EAAK4B,OADV,MACqB5B,EAAK6B,aAE1B,qBAAKtE,UAAU,iEAAf,SACKyC,EAAK8B,eC5EvB,SAASmE,EAAQpJ,EAAYqJ,GAChC,IAAMC,EAAWC,cAEXC,EAAM,uCAAG,WAAOC,EAAOC,GAAd,iBAAAzI,EAAA,sEACYyC,MAAM,mCAAoC,CAC7DnC,OAAQ,OACRiE,QAAS,CACL,eAAgB,oBAEpBG,KAAMC,KAAKC,UAAU,CACjB9E,SAAU0I,EACVC,eARG,cACL/F,EADK,gBAWQA,EAASC,OAXjB,UAWLd,EAXK,OAYXe,QAAQC,IAAI,kBAAmBhB,GAE1Ba,EAASgG,GAdH,wBAePN,EAASvG,EAAK8G,QAfP,2BAkBX/F,QAAQC,IAAI,cAEZ9D,GAAW,GACXE,OAAOgB,aAAa8E,QAAQ,SAAUlD,EAAKwC,QAC3CpF,OAAOgB,aAAa8E,QAAQ,UAAWlD,EAAK4C,SAC5C4D,EAAS,KAvBE,4CAAH,wDA0BZ,MAAO,CAAEE,UC5BN,SAASK,EAAOhK,GACnB,IAAQG,EAAeH,EAAfG,WACR,EAA0ByE,IAAMlE,SAAS,IAAzC,mBAAOkJ,EAAP,KAAcK,EAAd,KACA,EAAgCrF,IAAMlE,SAAS,IAA/C,mBAAOmJ,EAAP,KAAiBK,EAAjB,KACA,EAA6CtF,IAAMlE,SAAS,IAA5D,mBAAOyJ,EAAP,KAAwBC,EAAxB,KACA,EAA0BxF,IAAMlE,SAAS,IAAzC,mBAAO2J,EAAP,KAAcb,EAAd,KACQG,EAAWJ,EAAQpJ,EAAYqJ,GAA/BG,OAER/E,IAAMC,WAAU,WACRwF,GACAb,EAAS,MAEd,CAACI,EAAOC,IAEX,IAAMS,EAAY,uCAAG,WAAOC,GAAP,iBAAAnJ,EAAA,yDACjBmJ,EAAMC,iBACDZ,EAFY,uBAGbJ,EAAS,kBAHI,6BAMZK,EANY,uBAObL,EAAS,qBAPI,6BAUZW,EAVY,wBAWbX,EAAS,2BAXI,8BAcbK,IAAaM,EAdA,wBAebX,EAAS,0BAfI,4CAmBM3F,MAAM,mCAAoC,CAC7DnC,OAAQ,OACRiE,QAAS,CACL,eAAgB,oBAEpBG,KAAMC,KAAKC,UAAU,CACjB9E,SAAU0I,EACVC,eA1BS,eAmBX/F,EAnBW,iBA6BEA,EAASC,OA7BX,WA6BXd,EA7BW,OA+BjBe,QAAQC,IAAIH,EAAUb,GAEjBa,EAASgG,GAjCG,wBAkCbN,EAASvG,EAAK8G,QAlCD,4CAsCXJ,EAAOC,EAAOC,GAtCH,4CAAH,sDAyClB,OACI,qCACI,qBAAKhJ,UAAU,cAAf,SACI,uBAAM4J,SAAUH,EAAhB,UACI,sBAAKzJ,UAAU,aAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,yDAAf,mBAGA,uBAAOmB,KAAK,QAAQnB,UAAU,cAAc6J,SAAU,SAAA5I,GAAC,OAAImI,EAASnI,EAAEC,OAAOH,aAEjF,sBAAKf,UAAU,eAAf,UACI,qBAAKA,UAAU,4DAAf,sBAGA,uBAAOmB,KAAK,WAAWnB,UAAU,iBAC1B6J,SAAU,SAAA5I,GAAC,OAAIoI,EAAYpI,EAAEC,OAAOH,UAC3C,qBAAKf,UAAU,qCAAf,qCACA,uBAAOmB,KAAK,WAAWnB,UAAU,wBAC1B6J,SAAU,SAAA5I,GAAC,OAAIsI,EAAkBtI,EAAEC,OAAOH,aAErD,qBAAKf,UAAU,aAAf,SAA6BwJ,OAEjC,wBACIxJ,UAAU,qEACVmB,KAAK,SAFT,oCAMR,qBAAKnB,UAAU,qEAAf,wBCpFL,SAAS8J,GAAM3K,GAClB,IAAQG,EAAeH,EAAfG,WACR,EAA0BO,qBAA1B,mBAAOkJ,EAAP,KAAcK,EAAd,KACA,EAAgCvJ,qBAAhC,mBAAOmJ,EAAP,KAAiBK,EAAjB,KACA,EAA0BtF,IAAMlE,SAAS,IAAzC,mBAAO2J,EAAP,KAAcb,EAAd,KACQG,EAAWJ,EAAQpJ,EAAYqJ,GAA/BG,OAER/E,IAAMC,WAAU,WACRwF,GACAb,EAAS,MAEd,CAACI,EAAOC,IAEX,IAAMS,EAAY,uCAAG,WAAOC,GAAP,SAAAnJ,EAAA,yDACjBmJ,EAAMC,iBACDZ,EAFY,uBAGbJ,EAAS,kBAHI,6BAMZK,EANY,uBAObL,EAAS,qBAPI,0CAWXG,EAAOC,EAAOC,GAXH,2CAAH,sDAclB,OACI,qCACI,qBAAKhJ,UAAU,qEAAf,oBAGA,qBAAKA,UAAU,aAAf,SACI,uBAAM4J,SAAUH,EAAhB,UACI,sBAAKzJ,UAAU,aAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,yDAAf,mBAGA,uBAAOmB,KAAK,QAAQnB,UAAU,cACvBe,MAAOgI,EACPc,SAAU,SAAA5I,GAAC,OAAImI,EAASnI,EAAEC,OAAOH,aAG5C,sBAAKf,UAAU,qBAAf,UACI,qBAAKA,UAAU,4DAAf,sBAGA,uBAAOmB,KAAK,WAAWnB,UAAU,iBAC1Be,MAAOiI,EACPa,SAAU,SAAA5I,GAAC,OAAIoI,EAAYpI,EAAEC,OAAOH,aAG/C,qBAAKf,UAAU,aAAf,SAA6BwJ,OAEjC,wBACIxJ,UAAU,qEACVmB,KAAK,SAASb,QAASmJ,EAF3B,gC,MCrDb,SAASM,GAAQ5K,GACpB,IAAOE,EAAQF,EAARE,KACDuJ,EAAWC,cAOjB,EAA6B9E,IAAMlE,SALZ,IAKvB,mBAAOwE,EAAP,KAAe2F,EAAf,KACA,EAAmCjG,IAAMlE,SALf,IAK1B,mBAAOyE,EAAP,KAAkB2F,EAAlB,KACA,EAAmClG,IAAMlE,SALf,IAK1B,mBAAOyH,EAAP,KAAkB4C,EAAlB,KAEMC,EAAW,uCAAG,WAAOT,GAAP,qBAAAnJ,EAAA,sDAWhB,IAAS6J,KAVH3H,EAAO,CACT4B,SACAC,UAAWA,EACXgD,UAAWA,EACX/C,MAXM,EAYNlF,QAEJqK,EAAMC,iBAEAvD,EAAW,IAAIC,SACD5D,EAChB2D,EAASE,OAAO8D,EAAS3H,EAAK2H,IAZlB,gBAeG3F,EAAiB,SAAU,CAC1C5D,OAAQ,OACRoE,KAAMmB,IAjBM,OAeVhE,EAfU,OAoBhBe,QAAQC,IAAIhB,GAEZwG,EAAS,SAAD,OAAUxG,EAAK+B,KAtBP,2CAAH,sDA2BjB,OACI,iCACI,sBAAKnE,UAAU,kBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,4CACA,uBACI4H,KAAK,SAASzG,KAAK,OAAOJ,MAAOsD,EACjCrE,UAAU,eACV6J,SAAU,SAACH,GACPM,EAAWN,EAAMxI,OAAOH,aAIpC,sBAAKf,UAAU,gBAAf,UACI,+CACA,uBACI4H,KAAK,YAAYzG,KAAK,OAAOJ,MAAOuD,EACpCtE,UAAU,kBACV6J,SAAU,SAACH,GACPO,EAAcP,EAAMxI,OAAOH,gBAK3C,sBAAKf,UAAU,iBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,wDAGJ,0BACI4H,KAAK,SAASzG,KAAK,OAAOJ,MAAOuG,EACjCc,MAAO,CAACpC,SAAU,QAAShG,UAAU,cACrC6J,SAAU,SAACH,GACPQ,EAAcR,EAAMxI,OAAOH,aAIvC,wBAAQI,KAAK,SAASnB,UAAU,mDAAmDM,QAAS6J,EAA5F,6BC1EL,SAASE,KACZ,IAAMzB,EAAWC,cACX9F,EAAWa,cAOT0G,EANOvE,cAMPuE,QACF7H,EAAOoB,aAAY,SAACL,GAAD,OAAWA,EAAM7B,MAAMA,MAAM2I,MACtD,EAA6BvG,IAAMlE,SANZ,IAMvB,mBAAOwE,EAAP,KAAe2F,EAAf,KACA,EAAmCjG,IAAMlE,SANf,IAM1B,mBAAOyE,EAAP,KAAkB2F,EAAlB,KACA,EAAmClG,IAAMlE,SANf,IAM1B,mBAAOyH,EAAP,KAAkB4C,EAAlB,KAgBA,GAdAnG,IAAMC,WAAU,WACZjB,EAASU,EAAU6G,MACpB,IAGHvG,IAAMC,WAAU,WACZb,QAAQC,IAAI,SAAUkH,EAAS7H,GAC3BA,IACAuH,EAAWvH,EAAK4B,QAChB4F,EAAcxH,EAAK6B,WACnB4F,EAAczH,EAAK6E,cAExB,CAAC7E,KAECA,EACD,OAAQ,yCAGZ,IAAM0H,EAAW,uCAAG,WAAOT,GAAP,qBAAAnJ,EAAA,sDAShB,IAAS6J,KARHG,EAAe,CACjBlG,SACAC,UAAWA,EACXgD,UAAWA,GAEfoC,EAAMC,iBAEAvD,EAAW,IAAIC,SACDkE,EAChBnE,EAASE,OAAO8D,EAASG,EAAaH,IAV1B,gBAaG3F,EAAiB,SAAD,OAAU6F,EAAV,KAAsB,CACrDzJ,OAAQ,QACRoE,KAAMmB,IAfM,OAaVhE,EAbU,OAkBhBwG,EAAS,SAAD,OAAUxG,EAAK+B,KAlBP,2CAAH,sDAqBjB,OACI,iCACI,sBAAKnE,UAAU,kBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,4CACA,uBACI4H,KAAK,SAASzG,KAAK,OAAOJ,MAAOsD,EACjCrE,UAAU,eACV6J,SAAU,SAACH,GACPM,EAAWN,EAAMxI,OAAOH,aAIpC,sBAAKf,UAAU,gBAAf,UACI,+CACA,uBACI4H,KAAK,YAAYzG,KAAK,OAAOJ,MAAOuD,EACpCtE,UAAU,kBACV6J,SAAU,SAACH,GACPO,EAAcP,EAAMxI,OAAOH,gBAK3C,sBAAKf,UAAU,iBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,wDAGJ,0BACI4H,KAAK,SAASzG,KAAK,OAAOJ,MAAOuG,EACjCc,MAAO,CAACpC,SAAU,QAAShG,UAAU,cACrC6J,SAAU,SAACH,GACPQ,EAAcR,EAAMxI,OAAOH,aAIvC,wBAAQI,KAAK,SAASnB,UAAU,mDAAmDM,QAAS6J,EAA5F,6BCvFL,SAASK,KACZ,MAAwBzG,IAAMlE,SAAS,MAAvC,mBAAOR,EAAP,KAAaoL,EAAb,KACA,EAA8B1G,IAAMlE,SAChCL,OAAOgB,aAAaqE,QAAQ,WADhC,mBAAOzF,EAAP,KAAgBE,EAAhB,KAIMoL,EAAS,uCAAG,4BAAAnK,EAAA,sEACKkE,EAAiB,iBADtB,OACRpF,EADQ,OAEdoL,EAAQpL,GAFM,2CAAH,qDAWf,OANA0E,IAAMC,WAAU,WACR5E,GACKsL,MAEV,CAACtL,IAGA,mCACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAUA,QAASA,EAASC,KAAMA,EAAMC,WAAYA,IACpD,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqL,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,IAAD,CAAUzK,GAAG,QAC5C,cAAC,IAAD,CAAOwK,KAAK,+BAA+BC,QAAS,cAACvC,EAAD,MACpD,cAAC,IAAD,CAAOsC,KAAK,WAAWC,QAAS,cAACzB,EAAD,CAAQ7J,WAAYA,MACpD,cAAC,IAAD,CAAOqL,KAAK,UAAUC,QAAS,cAACd,GAAD,CAAOxK,WAAYA,MAClD,cAAC,IAAD,CAAOqL,KAAK,gBAAgBC,QAAS,cAAC,EAAD,CAAUxL,QAASA,EAASC,KAAMA,MACvE,cAAC,IAAD,CAAOsL,KAAK,WAAWC,QAAS,cAAC,IAAD,CAAUzK,GAAG,QAC7C,cAAC,IAAD,CAAOwK,KAAK,YAAYC,QAAS,cAAC,GAAD,CAASvL,KAAMA,MAChD,cAAC,IAAD,CAAOsL,KAAK,wBAAwBC,QAAS,cAACP,GAAD,CAAYhL,KAAMA,cC1CnF,IAYewL,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2BCHDQ,GAAWC,2BAAgB,CAAE5J,MnBSnC,WAA8C,IAA/B6B,EAA8B,uDAAtB/B,EAAcd,EAAQ,uCAChD,OAAQA,EAAOQ,MACX,KAAKE,EACD,MAAO,CACHS,MAAOnB,EAAO6B,QAAQV,MACtBJ,SAAUf,EAAO6B,QAAQd,SACzBC,MAAOhB,EAAO6B,QAAQb,MACtBC,SAAS,EACTC,KAAM,GAId,KAAKL,EACD,OAAO,2BACAgC,GADP,IAEI9B,SAAS,GAAD,mBAAM8B,EAAM9B,UAAZ,YAAyBf,EAAO6B,QAAQd,WAChDC,MAAM,2BAAM6B,EAAM7B,OAAUhB,EAAO6B,QAAQb,OAC3CC,SAAS,EACTC,KAAM2B,EAAM3B,KAAO,IAI3B,KAAKN,EACD,OAAO,2BACAiC,GADP,IAEI5B,SAAS,IAIjB,KAAKN,EACD,IAAMmB,EAAO9B,EAAO6B,QAChBd,EAAW8B,EAAM9B,SAMrB,OAJKA,EAASiG,SAASlF,EAAK0B,KACxBzC,EAASmG,KAAKpF,EAAK0B,IAGhB,2BACAX,GADP,IAEI9B,WACAC,MAAM,2BACC6B,EAAM7B,OADR,kBAEAc,EAAK0B,GAAK1B,IAEfb,SAAS,IAIjB,QACI,OAAO4B,ImB1D8BgC,OfG1C,WAA+C,IAA/BhC,EAA8B,uDAAtB/B,EAAcd,EAAQ,uCACjD,OAAQA,EAAOQ,OACNoE,EACM,CACHE,UAAW9E,EAAO6B,QAAQiD,UAC1BD,OAAQ7E,EAAO6B,QAAQgD,QAKpBhC,KgBTnBgI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUC,MCFPC,uBACHN,GAHU,GAKVO,+BAAoBC,2BAAgBC,QDDpC,SACI,cAACvB,GAAD,QAGRwB,SAASC,eAAe,SAM5BpB,O","file":"static/js/main.5a6d5595.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search_icon.f326cfeb.svg\";","export default __webpack_public_path__ + \"static/media/background.fb8d516c.jpg\";","import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport search_icon from \"../assets/search_icon.svg\";\nimport guitar_back from \"../assets/background.jpg\";\nimport \"./BasePage.css\"\n\nexport function BasePage(props) {\n    const {isLogin, user, setIsLogin} = props;\n\n    const {search} = window.location;\n    const query = new URLSearchParams(search).get('s');\n    const [searchQuery, setSearchQuery] = useState(query || '');\n\n    if (isLogin && !user) {\n        return (<></>);\n    }\n\n    return (\n        <>\n            <div className=\"background\"/>\n            <div className=\"background_image\">\n                <img src={guitar_back}/>\n            </div>\n            <div className=\"nav-bar\">\n                <Link to=\"/\"\n                      className=\"web_title valign-text-middle alfaslabone-normal-muddy-waters-50px\"> Chords </Link>\n                <div className=\"right-nav-pannel\">\n                    {isLogin ? (\n                        <>\n                            <div className=\"nav-username\">\n                                Logged in as <font color=\"#8b4513\">{user.username}</font>\n                            </div>\n\n                            <div className=\"nav-bar-button\">\n                                <Link\n                                    to=\"/add_song\"\n                                    className=\"navbar_button_link raleway-normal-black-20px\"\n                                >\n                                    Add song\n                                </Link>\n                            </div>\n\n                            <div className=\"nav-bar-button\">\n                                <Link to=\"/log_out\" className=\"navbar_button_link raleway-normal-black-20px\"\n                                      onClick={async () => {\n                                          setIsLogin(false);\n                                          window.localStorage.clear();\n                                      }}>\n                                    Log out\n                                </Link>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <div className=\"nav-bar-button\">\n                                <Link\n                                    to=\"/log_in\"\n                                    className=\"navbar_button_link raleway-normal-black-20px\"\n                                >\n                                    Log in\n                                </Link>\n                            </div>\n                            <div className=\"nav-bar-button\">\n                                <Link to=\"/sign_up\" className=\"navbar_button_link raleway-normal-black-20px\">\n                                    Sign up\n                                </Link>\n                            </div>\n                        </>\n                    )}\n                    <div className=\"search-box\">\n                        <div className=\"search-icon\">\n                            <img src={search_icon}/>\n                        </div>\n\n                        <form action={`/search_results/${encodeURIComponent(searchQuery)}`}\n                              method=\"get\" autoComplete=\"true\">\n                            <input\n                                value={searchQuery}\n                                onInput={e => setSearchQuery(e.target.value)}\n                                type=\"text\"\n                                placeholder=\"Search...\"\n                                className=\"searchbar_text raleway-normal-black-15px\"\n                            />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","export const SET_SONG_LIST = 'SET_SONG_LIST';\nexport const SET_SONG = 'SET_SONG';\nexport const SET_ERROR = 'SET_ERROR';\nexport const SET_SONG_LIST_MORE = 'SET_SONG_LIST_MORE';\n\nconst initialState = {\n    songList: [],\n    songs: {},\n    isError: false,\n    page: 0,\n    count: 0,\n};\n\nexport function songs(state = initialState, action) {\n    switch (action.type) {\n        case SET_SONG_LIST: {\n            return {\n                count: action.payload.count,\n                songList: action.payload.songList,\n                songs: action.payload.songs,\n                isError: false,\n                page: 1,\n            };\n        }\n\n        case SET_SONG_LIST_MORE: {\n            return {\n                ...state,\n                songList: [...state.songList, ...action.payload.songList],\n                songs: { ...state.songs, ...action.payload.songs },\n                isError: false,\n                page: state.page + 1,\n            };\n        }\n\n        case SET_ERROR: {\n            return {\n                ...state,\n                isError: true,\n            };\n        }\n\n        case SET_SONG: {\n            const song = action.payload;\n            let songList = state.songList;\n\n            if (!songList.includes(song.id)) {\n                songList.push(song.id);\n            }\n\n            return {\n                ...state,\n                songList,\n                songs: {\n                    ...state.songs,\n                    [song.id]: song,\n                },\n                isError: false,\n            };\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n","import {schema, normalize} from 'normalizr';\nimport {SET_SONG_LIST, SET_SONG_LIST_MORE, SET_SONG, SET_ERROR} from '../reducers/songs';\n\nconst userSchema = new schema.Entity('user');\nconst songSchema = new schema.Entity('song', {\n    user: userSchema,\n});\n\nfunction setSongs(data, count) {\n    const {result, entities} = normalize(data, [songSchema]);\n\n    return {\n        type: SET_SONG_LIST,\n        payload: {\n            count,\n            songList: result,\n            songs: entities.song,\n            users: entities.user,\n        },\n    };\n}\n\nfunction setSongsMore(data) {\n    const {result, entities} = normalize(data, [songSchema]);\n\n    return {\n        type: SET_SONG_LIST_MORE,\n        payload: {\n            songList: result,\n            songs: entities.song,\n            users: entities.user,\n        },\n    };\n}\n\nfunction setSong(payload) {\n    return {\n        type: SET_SONG,\n        payload,\n    };\n}\n\nfunction setIsError() {\n    return {\n        type: SET_ERROR,\n    };\n}\n\nexport function fetchSongs(query_line=\"\") {\n    if (query_line) {\n        query_line = \"?\" + query_line;\n    }\n    return async (dispatch) => {\n        try {\n            const response = await fetch(`http://localhost:8000/api/songs${query_line}`);\n            const data = await response.json();\n            console.log(\"Fetched songs: \", data);\n            dispatch(setSongs(data.results, data.count));\n        } catch {\n            dispatch(setIsError());\n        }\n    };\n}\n\nexport function fetchSongsMore(query_line=\"\") {\n    return async (dispatch, getState) => {\n        try {\n            const state = getState();\n            const page = state.songs.page;\n            const response = await fetch(\n                `http://localhost:8000/api/songs?page=${page + 1}&${query_line}`\n            );\n            const data = await response.json();\n            dispatch(setSongsMore(data.results));\n        } catch {\n            dispatch(setIsError());\n        }\n    };\n}\n\nexport function fetchSong(songId) {\n    return async (dispatch) => {\n        try {\n            const response = await fetch(`http://localhost:8000/api/songs/${songId}`);\n            const song = await response.json();\n\n            dispatch(setSong(song));\n        } catch {\n            dispatch(setIsError());\n        }\n    };\n}\n\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {fetchSongs, fetchSongsMore, fetchSong} from '../actions/songs';\nimport {Link} from \"react-router-dom\";\nimport \"./MainPage.css\"\n\nexport function MainPage() {\n    const dispatch = useDispatch();\n    const songList = useSelector((state) => state.songs.songList);\n    const count = useSelector((state) => state.songs.count);\n    const isError = useSelector((state) => state.songs.isError);\n\n    const ordering_query = \"ordering=-views\";\n\n    React.useEffect(() => {\n        dispatch(fetchSongs(ordering_query));\n    }, []);\n\n    if (isError) {\n        return (\n            <h1>Произошла ошибка!</h1>\n        );\n    }\n\n    return (\n        <>\n            <div className=\"page-title valign-text-middle alfaslabone-normal-muddy-waters-40px\">\n                Popular\n            </div>\n            <div className=\"song-list-header\">\n                <div className=\"song-name valign-text-middle raleway-normal-ship-gray-15px\">\n                    Singer - song name\n                </div>\n                <div className=\"clicks-number valign-text-middle raleway-normal-ship-gray-15px\">\n                    Views\n                </div>\n            </div>\n            <div className=\"elements-list\">\n                {songList.map((songId) => (\n                    <SongCard id={songId} key={songId}/>\n                ))}\n                {songList.length < count && (\n                    <div className='song-card-box'>\n                        <div\n                            className='raleway-normal-ship-gray-15px show-more-button'\n                            onClick={() => dispatch(fetchSongsMore(ordering_query))}\n                        >\n                            Show more\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n}\n\nfunction SongCard(props) {\n    const { id } = props;\n    const song = useSelector((state) => state.songs.songs[id]);\n\n    return (\n        <Link to={`/song/${song.id}`}>\n            <div className=\"song-card-box\">\n                <div className=\"song-card\">\n                    <div className=\"song-name valign-text-middle raleway-normal-ship-gray-15px\">\n                        {song.singer} - {song.song_name}\n                    </div>\n                    <div className=\"clicks-number valign-text-middle raleway-normal-ship-gray-15px\">\n                        {song.views}\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n}\n","const apiBase = 'http://localhost:8000/api/';\n\nexport async function ApiClientService(url, options = {}) {\n    const access = window.localStorage.getItem('ACCESS');\n    const headers = options.headers || {};\n    if (access) {\n        headers['Authorization'] = `Bearer ${access}`;\n    }\n\n    let response = await fetch(`${apiBase}${url}`, { ...options, headers });\n\n    if (response.status === 401) {\n        const refresh = window.localStorage.getItem('REFRESH');\n        const refreshResponse = await fetch(`${apiBase}token/refresh/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/json',\n            },\n            body: JSON.stringify({\n                refresh,\n            }),\n        });\n        const refreshData = await refreshResponse.json();\n\n        window.localStorage.setItem('ACCESS', refreshData.access);\n\n        headers['Authorization'] = `Bearer ${refreshData.access}`;\n\n        response = await fetch(`${apiBase}${url}`, { ...options, headers });\n    }\n\n    const data = await response.json();\n\n    return data;\n}\n","export const SET_CHORD_LIST = 'SET_CHORD_LIST';\n\nconst initialState = {\n    chords: {},\n    chordList: []\n}\n\nexport function chords(state = initialState, action) {\n    switch (action.type) {\n        case SET_CHORD_LIST: {\n            return {\n                chordList: action.payload.chordList,\n                chords: action.payload.chords,\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n}","import {schema, normalize} from 'normalizr';\nimport {SET_CHORD_LIST} from '../reducers/chords';\n\nconst chordSchema = new schema.Entity('chord');\n\nfunction setChords(data) {\n    const {result, entities} = normalize(data, [chordSchema]);\n    console.log(\"Result: \", result, \"; Entities: \", entities);\n    return {\n        type: SET_CHORD_LIST,\n        payload: {\n            chordList: result,\n            chords: entities.chord,\n        },\n    };\n}\n\nexport function fetchChords() {\n    return async (dispatch) => {\n        const response = await fetch(\"http://localhost:8000/api/chords\");\n        const data = await response.json();\n        console.log(\"Fetched chords: \", data);\n        dispatch(setChords(data));\n    };\n}\n","export default __webpack_public_path__ + \"static/media/arrow_down.0500c985.svg\";","export default __webpack_public_path__ + \"static/media/arrow_up.f7938c74.svg\";","export default __webpack_public_path__ + \"static/media/minus.8a6244c5.svg\";","export default __webpack_public_path__ + \"static/media/plus.d2c8885b.svg\";","import React, {useState} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {animateScroll as scroll} from 'react-scroll';\nimport {Link} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {ApiClientService} from \"../services/ApiClientService\";\n\nimport {fetchSong} from \"../actions/songs\";\nimport {fetchChords} from \"../actions/chords\";\n\nimport \"./SongPage.css\";\nimport arrow_down from \"../assets/arrow_down.svg\";\nimport arrow_up from \"../assets/arrow_up.svg\";\nimport minus from \"../assets/minus.svg\";\nimport plus from \"../assets/plus.svg\";\n\n\nexport function SongPage(props) {\n    const {isLogin, user} = props;\n\n    const dispatch = useDispatch();\n    const params = useParams();\n\n    const [fontSize, setFontSize] = useState(13);\n    const [scrollSpeed, setScrollSpeed] = useState(0);\n\n    const {songId} = params;\n    const song = useSelector((state) => state.songs.songs[songId]);\n    const chords = useSelector((state) => state.chords);\n\n    React.useEffect(() => {\n        dispatch(fetchSong(songId));\n        dispatch(fetchChords());\n    }, []);\n\n    React.useEffect(async () => {\n        if (song) {\n            const formData = new FormData();\n            console.log(\"Song: \", song);\n            formData.append(\"views\", (song.views + 1).toString());\n\n            const data = await ApiClientService(`songs/${songId}/`, {\n                method: 'PATCH',\n                body: formData,\n            })\n        }\n    }, [song])\n\n    if (!song || !chords || chords.length === 0) {\n        return (<> </>);\n    }\n\n    function ModifyScroll(delta) {\n        const newScrollSpeed = scrollSpeed + delta;\n        const scrollOptions = {\n            smooth: 'linear',\n            containerId: \"song-box\",\n            isDynamic: true,\n            duration: function (scrollDistanceInPx) {\n                return 200 * scrollDistanceInPx / newScrollSpeed;\n            }\n        };\n\n        if (newScrollSpeed < 0) {\n            scroll.scrollToTop(scrollOptions);\n        } else if (newScrollSpeed > 0) {\n            scroll.scrollToBottom(scrollOptions);\n        } else {\n            scroll.scrollTo(0);\n        }\n        setScrollSpeed(newScrollSpeed);\n    }\n\n    const words = song.song_text.split(/\\s+/);\n    let chord_images = [];\n\n    for (let [chordId, chord] of Object.entries(chords.chords)) {\n        if (words.includes(chord.name)) {\n            chord_images.push(chord.image)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"view-params\">\n                <div className=\"autoscroll-box\">\n                    <div className=\"valign-text-middle\">\n                        Autoscroll speed: {scrollSpeed}\n                    </div>\n                    <div className=\"scroll-regulator\">\n                        <img src={arrow_up} onClick={() => ModifyScroll(-1)}/>\n                        <div className=\"vline\"/>\n                        <img src={arrow_down} onClick={() => ModifyScroll(1)}/>\n                    </div>\n                </div>\n\n                <div className=\"font-control-box\">\n                    <div className=\"valign-text-middle\">\n                        Font size: {fontSize}\n                    </div>\n                    <div className=\"font-regulator\">\n                        <img src={minus} onClick={() => setFontSize(fontSize - 1)}/>\n                        <div className=\"vline\"/>\n                        <img src={plus} onClick={() => setFontSize(fontSize + 1)}/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"song-box\" id=\"song-box\">\n                <div className=\"song-header-box\">\n                    <div className=\"song-title-singer\">\n                        {song.singer} - {song.song_name}\n                    </div>\n\n                    {isLogin && (user.id === song.user.id) && (\n                        <>\n                            <div className=\"nav-bar-button\">\n                                <Link to={`/update_song/${song.id}`}\n                                      className=\"navbar_button_link raleway-normal-black-20px\">\n                                    Edit song\n                                </Link>\n                            </div>\n                        </>\n                    )}\n                </div>\n\n                {(chord_images) && (\n                    <div className=\"chords-grid\">\n                        {chord_images.map((chord_image) =>\n                            <img src={chord_image} className=\"chord-pic\"/>\n                        )}\n                    </div>\n                )}\n\n                <div style={{fontSize: `${fontSize}px`}} className=\"song-chords\">\n                    {song.song_text}\n                </div>\n            </div>\n        </>\n    );\n}\n","import React from 'react';\nimport {Link, useParams} from \"react-router-dom\";\nimport \"./MainPage.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchSongs, fetchSongsMore} from \"../actions/songs\";\n\nexport function SearchResults() {\n    const params = useParams();\n    const dispatch = useDispatch();\n\n    const {searchQuery} = params;\n    const songList = useSelector((state) => state.songs.songList);\n    const count = useSelector((state) => state.songs.count);\n    const isError = useSelector((state) => state.songs.isError);\n\n    const fetch_songs_query_args = `search=${searchQuery}&ordering=-views`\n\n    React.useEffect(() => {\n        dispatch(fetchSongs(fetch_songs_query_args));\n    }, []);\n\n    if (isError) {\n        return (\n            <h1>Произошла ошибка!</h1>\n        );\n    }\n\n    return (\n        <>\n            <div className=\"page-title\">\n                <div style={{marginRight: \"10px\"}} className=\"valign-text-middle alfaslabone-normal-muddy-waters-40px\">\n                    Search results:\n                </div>\n                <div style={{marginTop: \"17px\"}}>\n                    <div className=\"valign-text-middle raleway-normal-white-title\">\n                        {decodeURIComponent(searchQuery)}\n                    </div>\n                </div>\n            </div>\n            <div className=\"song-list-header\">\n                <div className=\"song-name valign-text-middle raleway-normal-ship-gray-15px\">\n                    Singer - song name\n                </div>\n                <div className=\"clicks-number valign-text-middle raleway-normal-ship-gray-15px\">\n                    Views\n                </div>\n            </div>\n            <div className=\"elements-list\">\n                {songList.map((songId) => (\n                    <SongCard id={songId} key={songId}/>\n                ))}\n                {songList.length < count && (\n                    <div className='song-card-box'>\n                        <div\n                            className='raleway-normal-ship-gray-15px show-more-button'\n                            onClick={() => dispatch(fetchSongsMore(fetch_songs_query_args))}\n                        >\n                            Show more\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n}\n\nfunction SongCard(props) {\n    const { id } = props;\n    const song = useSelector((state) => state.songs.songs[id]);\n\n    return (\n        <Link to={`/song/${song.id}`}>\n            <div className=\"song-card-box\">\n                <div className=\"song-card\">\n                    <div className=\"song-name valign-text-middle raleway-normal-ship-gray-15px\">\n                        {song.singer} - {song.song_name}\n                    </div>\n                    <div className=\"clicks-number valign-text-middle raleway-normal-ship-gray-15px\">\n                        {song.views}\n                    </div>\n                </div>\n            </div>\n        </Link>\n    );\n}\n","import { useNavigate } from 'react-router-dom';\n\nexport function useAuth(setIsLogin, setError) {\n    const navigate = useNavigate();\n\n    const onAuth = async (login, password) => {\n        const response = await fetch('http://localhost:8000/api/token/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/json',\n            },\n            body: JSON.stringify({\n                username: login,\n                password,\n            }),\n        });\n        const data = await response.json();\n        console.log(\"Inside onAuth: \", data);\n\n        if (!response.ok) {\n            setError(data.detail);\n            return;\n        }\n        console.log(\"Logged in!\");\n\n        setIsLogin(true);\n        window.localStorage.setItem('ACCESS', data.access);\n        window.localStorage.setItem('REFRESH', data.refresh);\n        navigate('/');\n    };\n\n    return { onAuth };\n}\n","import React, {useState} from 'react';\nimport { useAuth } from './hooks/useAuth';\n\nexport function SignUp(props) {\n    const { setIsLogin } = props;\n    const [login, setLogin] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [repeat_password, setRepeatPassword] = React.useState('');\n    const [error, setError] = React.useState('');\n    const { onAuth } = useAuth(setIsLogin, setError);\n\n    React.useEffect(() => {\n        if (error) {\n            setError('');\n        }\n    }, [login, password]);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (!login) {\n            setError('Login is empty');\n            return;\n        }\n        if (!password) {\n            setError('Password is empty');\n            return;\n        }\n        if (!repeat_password) {\n            setError('Please, repeat password');\n            return;\n        }\n        if (password !== repeat_password) {\n            setError('Passwords do not match')\n            return;\n        }\n\n        const response = await fetch('http://localhost:8000/api/users/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'Application/json',\n            },\n            body: JSON.stringify({\n                username: login,\n                password,\n            }),\n        });\n        const data = await response.json();\n\n        console.log(response, data);\n\n        if (!response.ok) {\n            setError(data.detail);\n            return;\n        }\n\n        await onAuth(login, password);\n    };\n\n    return (\n        <>\n            <div className=\"sign_up-box\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"fields-box\">\n                        <div className=\"login-box\">\n                            <div className=\"login valign-text-middle alfaslabone-normal-black-30px\">\n                                Login\n                            </div>\n                            <input type=\"login\" className=\"login-input\" onChange={e => setLogin(e.target.value)}/>\n                        </div>\n                        <div className=\"password-box\">\n                            <div className=\"password valign-text-middle alfaslabone-normal-black-30px\">\n                                Password\n                            </div>\n                            <input type=\"password\" className=\"password-field\"\n                                   onChange={e => setPassword(e.target.value)}/>\n                            <div className=\"repeat-password valign-text-middle\">Please, repeat password</div>\n                            <input type=\"password\" className=\"repeat-password-input\"\n                                   onChange={e => setRepeatPassword(e.target.value)}/>\n                        </div>\n                        <div className='error-text'>{error}</div>\n                    </div>\n                    <button\n                        className=\"create-an-account valign-text-middle alfaslabone-normal-white-30px\"\n                        type=\"submit\">Create an account\n                    </button>\n                </form>\n            </div>\n            <div className=\"page-title valign-text-middle alfaslabone-normal-muddy-waters-40px\">\n                Sign Up\n            </div>\n        </>\n    );\n}\n","import React, {useState} from 'react';\nimport { useAuth } from './hooks/useAuth';\n\nexport function LogIn(props) {\n    const { setIsLogin } = props;\n    const [login, setLogin] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = React.useState('');\n    const { onAuth } = useAuth(setIsLogin, setError);\n\n    React.useEffect(() => {\n        if (error) {\n            setError('');\n        }\n    }, [login, password]);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (!login) {\n            setError('Login is empty');\n            return;\n        }\n        if (!password) {\n            setError('Password is empty');\n            return;\n        }\n\n        await onAuth(login, password);\n    }\n\n    return (\n        <>\n            <div className=\"page-title valign-text-middle alfaslabone-normal-muddy-waters-40px\">\n                Log In\n            </div>\n            <div className=\"log_in-box\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"fields-box\">\n                        <div className=\"login-box\">\n                            <div className=\"login valign-text-middle alfaslabone-normal-black-30px\">\n                                Login\n                            </div>\n                            <input type=\"login\" className=\"login-input\"\n                                   value={login}\n                                   onChange={e => setLogin(e.target.value)}/>\n                        </div>\n\n                        <div className=\"login-password-box\">\n                            <div className=\"password valign-text-middle alfaslabone-normal-black-30px\">\n                                Password\n                            </div>\n                            <input type=\"password\" className=\"password-field\"\n                                   value={password}\n                                   onChange={e => setPassword(e.target.value)}/>\n                        </div>\n\n                        <div className='error-text'>{error}</div>\n                    </div>\n                    <button\n                        className=\"create-an-account valign-text-middle alfaslabone-normal-white-30px\"\n                        type=\"submit\" onClick={handleSubmit}>\n                        Log me in!\n                    </button>\n                </form>\n            </div>\n        </>\n    );\n}","import React from 'react';\nimport \"./AddSong.css\"\nimport {useNavigate} from 'react-router-dom';\nimport { ApiClientService } from '../services/ApiClientService';\n\nexport function AddSong(props) {\n    const {user} = props;\n    const navigate = useNavigate();\n\n    const default_singer = '';\n    const default_song_name = '';\n    const default_song_text = '';\n    const views = 0;\n\n    const [singer, set_singer] = React.useState(default_singer);\n    const [song_name, set_song_name] = React.useState(default_song_name);\n    const [song_text, set_song_text] = React.useState(default_song_text);\n\n    const handleClick = async (event) => {\n        const song = {\n            singer,\n            song_name: song_name,\n            song_text: song_text,\n            views,\n            user\n        };\n        event.preventDefault();\n\n        const formData = new FormData();\n        for (let songKey in song) {\n            formData.append(songKey, song[songKey]);\n        }\n\n        const data = await ApiClientService('songs/', {\n            method: 'POST',\n            body: formData,\n        });\n\n        console.log(data);\n\n        navigate(`/song/${data.id}`);\n    };\n\n\n\n    return (\n        <form>\n            <div className=\"singer-song-box\">\n                <div className=\"singer-box\">\n                    <label>Singer:</label>\n                    <input\n                        name='singer' type='text' value={singer}\n                        className=\"singer-input\"\n                        onChange={(event) => {\n                            set_singer(event.target.value);\n                        }}\n                    />\n                </div>\n                <div className=\"song-name-box\">\n                    <label>Song name:</label>\n                    <input\n                        name='song-name' type='text' value={song_name}\n                        className=\"song-name-input\"\n                        onChange={(event) => {\n                            set_song_name(event.target.value);\n                        }}\n                    />\n                </div>\n            </div>\n            <div className=\"input-song-box\">\n                <div className=\"lyrics-and-chords\">\n                    <label> Lyrics & chords </label>\n                </div>\n\n                <textarea\n                    name='lyrics' type='text' value={song_text}\n                    style={{fontSize: \"15px\"}} className=\"song-lyrics\"\n                    onChange={(event) => {\n                        set_song_text(event.target.value);\n                    }}\n                />\n            </div>\n            <button type='submit' className=\"create-song-button alfaslabone-normal-white-25px\" onClick={handleClick}>\n                Upload song!\n            </button>\n        </form>\n    );\n}\n","import React from 'react';\nimport \"./AddSong.css\"\nimport {useNavigate} from 'react-router-dom';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { ApiClientService } from '../services/ApiClientService';\nimport { useParams } from \"react-router-dom\";\nimport {fetchSong} from \"../actions/songs\";\n\nexport function UpdateSong() {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const params = useParams();\n\n    const default_singer = '';\n    const default_song_name = '';\n    const default_song_text = '';\n\n    const { song_id } = params;\n    const song = useSelector((state) => state.songs.songs[song_id]);\n    const [singer, set_singer] = React.useState(default_singer);\n    const [song_name, set_song_name] = React.useState(default_song_name);\n    const [song_text, set_song_text] = React.useState(default_song_text);\n\n    React.useEffect(() => {\n        dispatch(fetchSong(song_id));\n    }, []);\n\n\n    React.useEffect(() => {\n        console.log(\"Song: \", song_id, song);\n        if (song) {\n            set_singer(song.singer);\n            set_song_name(song.song_name);\n            set_song_text(song.song_text);\n        }\n    }, [song]);\n\n    if (!song) {\n        return (<> </>);\n    }\n\n    const handleClick = async (event) => {\n        const request_song = {\n            singer,\n            song_name: song_name,\n            song_text: song_text,\n        };\n        event.preventDefault();\n\n        const formData = new FormData();\n        for (let songKey in request_song) {\n            formData.append(songKey, request_song[songKey]);\n        }\n\n        const data = await ApiClientService(`songs/${song_id}/`, {\n            method: 'PATCH',\n            body: formData,\n        });\n\n        navigate(`/song/${data.id}`);\n    };\n\n    return (\n        <form>\n            <div className=\"singer-song-box\">\n                <div className=\"singer-box\">\n                    <label>Singer:</label>\n                    <input\n                        name='singer' type='text' value={singer}\n                        className=\"singer-input\"\n                        onChange={(event) => {\n                            set_singer(event.target.value);\n                        }}\n                    />\n                </div>\n                <div className=\"song-name-box\">\n                    <label>Song name:</label>\n                    <input\n                        name='song-name' type='text' value={song_name}\n                        className=\"song-name-input\"\n                        onChange={(event) => {\n                            set_song_name(event.target.value);\n                        }}\n                    />\n                </div>\n            </div>\n            <div className=\"input-song-box\">\n                <div className=\"song-title-singer\">\n                    <label> Lyrics & chords </label>\n                </div>\n\n                <textarea\n                    name='lyrics' type='text' value={song_text}\n                    style={{fontSize: \"15px\"}} className=\"song-lyrics\"\n                    onChange={(event) => {\n                        set_song_text(event.target.value);\n                    }}\n                />\n            </div>\n            <button type='submit' className=\"create-song-button alfaslabone-normal-white-25px\" onClick={handleClick}>\n                Save changes\n            </button>\n        </form>\n    );\n}\n","import React from \"react\";\nimport {BrowserRouter as Router, Routes, Route, Navigate} from \"react-router-dom\";\nimport {BasePage} from \"./components/BasePage\";\nimport {MainPage} from \"./components/MainPage\"\nimport {SongPage} from \"./components/SongPage\";\nimport {SearchResults} from \"./components/SearchResults\";\nimport {SignUp} from \"./components/SignUp\";\nimport {LogIn} from \"./components/LogIn\";\nimport {AddSong} from \"./components/AddSong\";\nimport {UpdateSong} from \"./components/UpdateSong\";\nimport { ApiClientService } from './services/ApiClientService';\n\nexport function App() {\n    const [user, setUser] = React.useState(null);\n    const [isLogin, setIsLogin] = React.useState(\n        window.localStorage.getItem('ACCESS')\n    );\n\n    const fetchUser = async () => {\n        const user = await ApiClientService('user/current/');\n        setUser(user);\n    };\n\n    React.useEffect(() => {\n        if (isLogin) {\n            void fetchUser();\n        }\n    }, [isLogin]);\n\n    return (\n        <>\n            <Router>\n                <BasePage isLogin={isLogin} user={user} setIsLogin={setIsLogin}/>\n                <Routes>\n                    <Route path=\"/\" element={<MainPage/>}/>\n                    <Route path=\"/Chords\" element={<Navigate to='/' />} />\n                    <Route path=\"/search_results/:searchQuery\" element={<SearchResults/>}/>\n                    <Route path=\"/sign_up\" element={<SignUp setIsLogin={setIsLogin}/>}/>\n                    <Route path=\"/log_in\" element={<LogIn setIsLogin={setIsLogin}/>}/>\n                    <Route path=\"/song/:songId\" element={<SongPage isLogin={isLogin} user={user}/>}/>\n                    <Route path='/log_out' element={<Navigate to='/' />} />\n                    <Route path='/add_song' element={<AddSong user={user} />} />\n                    <Route path='/update_song/:song_id' element={<UpdateSong user={user} />} />\n                </Routes>\n            </Router>\n        </>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { songs } from './songs';\nimport { chords } from  './chords'\n\nexport const reducers = combineReducers({ songs, chords});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport {Provider} from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport {initStore} from './store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={initStore()}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducers } from './reducers';\n\nexport function initStore() {\n    const store = {};\n\n    return createStore(\n        reducers,\n        store,\n        composeWithDevTools(applyMiddleware(thunk))\n    );\n}\n"],"sourceRoot":""}